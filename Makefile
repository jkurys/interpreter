## File generated by the BNF Converter (bnfc 2.9.4.1).

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestMylang

# Rules for building the parser.

AbsMylang.hs LexMylang.x ParMylang.y PrintMylang.hs TestMylang.hs : mylang.cf
	bnfc --haskell --functor mylang.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestMylang : AbsMylang.hs LexMylang.hs ParMylang.hs PrintMylang.hs TestMylang.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsMylang.hs AbsMylang.hs.bak ComposOp.hs ComposOp.hs.bak DocMylang.txt DocMylang.txt.bak ErrM.hs ErrM.hs.bak LayoutMylang.hs LayoutMylang.hs.bak LexMylang.x LexMylang.x.bak ParMylang.y ParMylang.y.bak PrintMylang.hs PrintMylang.hs.bak SkelMylang.hs SkelMylang.hs.bak TestMylang.hs TestMylang.hs.bak XMLMylang.hs XMLMylang.hs.bak ASTMylang.agda ASTMylang.agda.bak ParserMylang.agda ParserMylang.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak mylang.dtd mylang.dtd.bak TestMylang LexMylang.hs ParMylang.hs ParMylang.info ParDataMylang.hs Makefile


# EOF
